{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Tarefa 01\n",
    "\n",
    "- Leia os enunciados com atenção\n",
    "- Saiba que pode haver mais de uma resposta correta\n",
    "- Insira novas células de código sempre que achar necessário\n",
    "- Em caso de dúvidas, procure os tutores\n",
    "- Divirta-se :)\n",
    "\n",
    "#### 1)  crie uma série do pandas a partir de uma lista com os dados abaixo:\n",
    "\n",
    "Em um estudo sobre alteração na tempreatura global, A NASA disponibiliza dados de diferenças de de temperatura média da superfície terrestre relativos às médias de temperatura entre 1951 e 1980. Os dados originais podem ser vistos no site da NASA/GISS, e estão dispostos a cada década na tabela abaixo.\n",
    "\n",
    "|ano|anomalia termica|\n",
    "|:-:|:----:|\n",
    "| 1900 | -0.08 |\n",
    "| 1920 | -0.27 |\n",
    "| 1940 | 0.12 |\n",
    "| 1960 | -0.03 |\n",
    "| 1980 | 0.26 |\n",
    "| 2000 | 0.40 |\n",
    "| 2020 | 1.02 |\n",
    "\n",
    "Crie uma séries do Pandas a partir de uma lista com esses dados."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1900\n",
      "1    1920\n",
      "2    1940\n",
      "3    1960\n",
      "4    1980\n",
      "5    2000\n",
      "6    2020\n",
      "dtype: int64\n",
      "0   -0.08\n",
      "1   -0.27\n",
      "2    0.12\n",
      "3   -0.03\n",
      "4    0.26\n",
      "5    0.40\n",
      "6    1.02\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Seu código aqui\n",
    "dados_ano = list(range(1900, 2021, 20))\n",
    "ano = pd.Series(dados_ano)\n",
    "anomalia_termica = (-0.08, -0.27, 0.12, -0.03, 0.26, 0.40, 1.02)\n",
    "variaca_media_termica = pd.Series(anomalia_termica)\n",
    "print(ano)\n",
    "print(variaca_media_termica)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2) Coloque os anos nos índices conforme a tabela."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1900   -0.08\n",
       "1920   -0.27\n",
       "1940    0.12\n",
       "1960   -0.03\n",
       "1980    0.26\n",
       "2000    0.40\n",
       "2020    1.02\n",
       "dtype: float64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# seu código aqui\n",
    "ano_variacao = pd.Series(anomalia_termica, index = ano)\n",
    "ano_variacao\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3) A partir do dicionário abaixo, crie uma séries do Pandas:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1900   -0.08\n",
       "1920   -0.27\n",
       "1940    0.12\n",
       "1960   -0.03\n",
       "1980    0.26\n",
       "2000    0.40\n",
       "2020    1.02\n",
       "dtype: float64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dic_temperaturas = {1900: -.08, 1920: -.27, 1940: .12, 1960: -.03, 1980: .26, 2000: .40, 2020: 1.02}\n",
    "\n",
    "# seu código aqui\n",
    "ano_temperatura = pd.Series(dic_temperaturas)\n",
    "ano_temperatura"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4) Transforme o ndarray abaixo em um dataframe. \n",
    "O numpy é capaz de gerar arrays n-dimensionais com números pseudo-aleatórios de acordo com uma variedade de distribuições, como no exemplo abaixo. Transforme esse nd-array em um DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>108.204372</td>\n",
       "      <td>100.521436</td>\n",
       "      <td>89.817762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>97.378961</td>\n",
       "      <td>80.091391</td>\n",
       "      <td>109.553379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>84.821010</td>\n",
       "      <td>120.527806</td>\n",
       "      <td>96.853749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>105.216598</td>\n",
       "      <td>95.790807</td>\n",
       "      <td>95.082797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100.715298</td>\n",
       "      <td>94.076612</td>\n",
       "      <td>90.603889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>115.071206</td>\n",
       "      <td>93.766914</td>\n",
       "      <td>116.124897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>83.849035</td>\n",
       "      <td>107.887730</td>\n",
       "      <td>98.120949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>88.479988</td>\n",
       "      <td>89.597588</td>\n",
       "      <td>99.885475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>91.168774</td>\n",
       "      <td>80.777158</td>\n",
       "      <td>82.952188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>100.884500</td>\n",
       "      <td>98.125063</td>\n",
       "      <td>94.678752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>101.856691</td>\n",
       "      <td>85.000402</td>\n",
       "      <td>110.576909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>90.234030</td>\n",
       "      <td>93.544917</td>\n",
       "      <td>95.126427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>111.342199</td>\n",
       "      <td>102.163709</td>\n",
       "      <td>95.270229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>95.727915</td>\n",
       "      <td>102.706248</td>\n",
       "      <td>111.966588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>106.544699</td>\n",
       "      <td>104.838143</td>\n",
       "      <td>112.298319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>92.014170</td>\n",
       "      <td>112.504240</td>\n",
       "      <td>104.227038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>109.336090</td>\n",
       "      <td>95.266416</td>\n",
       "      <td>119.688485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>109.301463</td>\n",
       "      <td>96.538886</td>\n",
       "      <td>105.930328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>96.156765</td>\n",
       "      <td>94.846604</td>\n",
       "      <td>90.484875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>109.839603</td>\n",
       "      <td>92.254501</td>\n",
       "      <td>110.114301</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             0           1           2\n",
       "0   108.204372  100.521436   89.817762\n",
       "1    97.378961   80.091391  109.553379\n",
       "2    84.821010  120.527806   96.853749\n",
       "3   105.216598   95.790807   95.082797\n",
       "4   100.715298   94.076612   90.603889\n",
       "5   115.071206   93.766914  116.124897\n",
       "6    83.849035  107.887730   98.120949\n",
       "7    88.479988   89.597588   99.885475\n",
       "8    91.168774   80.777158   82.952188\n",
       "9   100.884500   98.125063   94.678752\n",
       "10  101.856691   85.000402  110.576909\n",
       "11   90.234030   93.544917   95.126427\n",
       "12  111.342199  102.163709   95.270229\n",
       "13   95.727915  102.706248  111.966588\n",
       "14  106.544699  104.838143  112.298319\n",
       "15   92.014170  112.504240  104.227038\n",
       "16  109.336090   95.266416  119.688485\n",
       "17  109.301463   96.538886  105.930328\n",
       "18   96.156765   94.846604   90.484875\n",
       "19  109.839603   92.254501  110.114301"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr = np.random.normal(100, 10, (20,3))\n",
    "\n",
    "# seu código aqui\n",
    "arr_df = pd.DataFrame(arr)\n",
    "arr_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5) Nomeie os índices das linhas com inteiros de 1 a 20, e as colunas com os nomes \"x1\", \"x2\", e \"x3\" respectivamente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x1</th>\n",
       "      <th>x2</th>\n",
       "      <th>x3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>108.204372</td>\n",
       "      <td>100.521436</td>\n",
       "      <td>89.817762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>97.378961</td>\n",
       "      <td>80.091391</td>\n",
       "      <td>109.553379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84.821010</td>\n",
       "      <td>120.527806</td>\n",
       "      <td>96.853749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>105.216598</td>\n",
       "      <td>95.790807</td>\n",
       "      <td>95.082797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100.715298</td>\n",
       "      <td>94.076612</td>\n",
       "      <td>90.603889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>115.071206</td>\n",
       "      <td>93.766914</td>\n",
       "      <td>116.124897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>83.849035</td>\n",
       "      <td>107.887730</td>\n",
       "      <td>98.120949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>88.479988</td>\n",
       "      <td>89.597588</td>\n",
       "      <td>99.885475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>91.168774</td>\n",
       "      <td>80.777158</td>\n",
       "      <td>82.952188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>100.884500</td>\n",
       "      <td>98.125063</td>\n",
       "      <td>94.678752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>101.856691</td>\n",
       "      <td>85.000402</td>\n",
       "      <td>110.576909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>90.234030</td>\n",
       "      <td>93.544917</td>\n",
       "      <td>95.126427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>111.342199</td>\n",
       "      <td>102.163709</td>\n",
       "      <td>95.270229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>95.727915</td>\n",
       "      <td>102.706248</td>\n",
       "      <td>111.966588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>106.544699</td>\n",
       "      <td>104.838143</td>\n",
       "      <td>112.298319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>92.014170</td>\n",
       "      <td>112.504240</td>\n",
       "      <td>104.227038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>109.336090</td>\n",
       "      <td>95.266416</td>\n",
       "      <td>119.688485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>109.301463</td>\n",
       "      <td>96.538886</td>\n",
       "      <td>105.930328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>96.156765</td>\n",
       "      <td>94.846604</td>\n",
       "      <td>90.484875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>109.839603</td>\n",
       "      <td>92.254501</td>\n",
       "      <td>110.114301</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            x1          x2          x3\n",
       "1   108.204372  100.521436   89.817762\n",
       "2    97.378961   80.091391  109.553379\n",
       "3    84.821010  120.527806   96.853749\n",
       "4   105.216598   95.790807   95.082797\n",
       "5   100.715298   94.076612   90.603889\n",
       "6   115.071206   93.766914  116.124897\n",
       "7    83.849035  107.887730   98.120949\n",
       "8    88.479988   89.597588   99.885475\n",
       "9    91.168774   80.777158   82.952188\n",
       "10  100.884500   98.125063   94.678752\n",
       "11  101.856691   85.000402  110.576909\n",
       "12   90.234030   93.544917   95.126427\n",
       "13  111.342199  102.163709   95.270229\n",
       "14   95.727915  102.706248  111.966588\n",
       "15  106.544699  104.838143  112.298319\n",
       "16   92.014170  112.504240  104.227038\n",
       "17  109.336090   95.266416  119.688485\n",
       "18  109.301463   96.538886  105.930328\n",
       "19   96.156765   94.846604   90.484875\n",
       "20  109.839603   92.254501  110.114301"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#seu código aqui\n",
    "arr_df_b = pd.DataFrame(arr, index = range(1,21), columns = ['x1', 'x2', 'x3'])\n",
    "arr_df_b"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 6) No DataFrame do exercício 5, crie uma nova coluna como sendo a média das três colunas, e dê a ela o nome de \"media\" (não recomendo colocar acentos em nomes de variáveis)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x1</th>\n",
       "      <th>x2</th>\n",
       "      <th>x3</th>\n",
       "      <th>media</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>108.204372</td>\n",
       "      <td>100.521436</td>\n",
       "      <td>89.817762</td>\n",
       "      <td>99.514523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>97.378961</td>\n",
       "      <td>80.091391</td>\n",
       "      <td>109.553379</td>\n",
       "      <td>95.674577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84.821010</td>\n",
       "      <td>120.527806</td>\n",
       "      <td>96.853749</td>\n",
       "      <td>100.734188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>105.216598</td>\n",
       "      <td>95.790807</td>\n",
       "      <td>95.082797</td>\n",
       "      <td>98.696734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100.715298</td>\n",
       "      <td>94.076612</td>\n",
       "      <td>90.603889</td>\n",
       "      <td>95.131933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>115.071206</td>\n",
       "      <td>93.766914</td>\n",
       "      <td>116.124897</td>\n",
       "      <td>108.321005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>83.849035</td>\n",
       "      <td>107.887730</td>\n",
       "      <td>98.120949</td>\n",
       "      <td>96.619238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>88.479988</td>\n",
       "      <td>89.597588</td>\n",
       "      <td>99.885475</td>\n",
       "      <td>92.654350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>91.168774</td>\n",
       "      <td>80.777158</td>\n",
       "      <td>82.952188</td>\n",
       "      <td>84.966040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>100.884500</td>\n",
       "      <td>98.125063</td>\n",
       "      <td>94.678752</td>\n",
       "      <td>97.896105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>101.856691</td>\n",
       "      <td>85.000402</td>\n",
       "      <td>110.576909</td>\n",
       "      <td>99.144667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>90.234030</td>\n",
       "      <td>93.544917</td>\n",
       "      <td>95.126427</td>\n",
       "      <td>92.968458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>111.342199</td>\n",
       "      <td>102.163709</td>\n",
       "      <td>95.270229</td>\n",
       "      <td>102.925379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>95.727915</td>\n",
       "      <td>102.706248</td>\n",
       "      <td>111.966588</td>\n",
       "      <td>103.466917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>106.544699</td>\n",
       "      <td>104.838143</td>\n",
       "      <td>112.298319</td>\n",
       "      <td>107.893720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>92.014170</td>\n",
       "      <td>112.504240</td>\n",
       "      <td>104.227038</td>\n",
       "      <td>102.915149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>109.336090</td>\n",
       "      <td>95.266416</td>\n",
       "      <td>119.688485</td>\n",
       "      <td>108.096997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>109.301463</td>\n",
       "      <td>96.538886</td>\n",
       "      <td>105.930328</td>\n",
       "      <td>103.923559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>96.156765</td>\n",
       "      <td>94.846604</td>\n",
       "      <td>90.484875</td>\n",
       "      <td>93.829414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>109.839603</td>\n",
       "      <td>92.254501</td>\n",
       "      <td>110.114301</td>\n",
       "      <td>104.069468</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            x1          x2          x3       media\n",
       "1   108.204372  100.521436   89.817762   99.514523\n",
       "2    97.378961   80.091391  109.553379   95.674577\n",
       "3    84.821010  120.527806   96.853749  100.734188\n",
       "4   105.216598   95.790807   95.082797   98.696734\n",
       "5   100.715298   94.076612   90.603889   95.131933\n",
       "6   115.071206   93.766914  116.124897  108.321005\n",
       "7    83.849035  107.887730   98.120949   96.619238\n",
       "8    88.479988   89.597588   99.885475   92.654350\n",
       "9    91.168774   80.777158   82.952188   84.966040\n",
       "10  100.884500   98.125063   94.678752   97.896105\n",
       "11  101.856691   85.000402  110.576909   99.144667\n",
       "12   90.234030   93.544917   95.126427   92.968458\n",
       "13  111.342199  102.163709   95.270229  102.925379\n",
       "14   95.727915  102.706248  111.966588  103.466917\n",
       "15  106.544699  104.838143  112.298319  107.893720\n",
       "16   92.014170  112.504240  104.227038  102.915149\n",
       "17  109.336090   95.266416  119.688485  108.096997\n",
       "18  109.301463   96.538886  105.930328  103.923559\n",
       "19   96.156765   94.846604   90.484875   93.829414\n",
       "20  109.839603   92.254501  110.114301  104.069468"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# seu código aqui\n",
    "arr_df_b ['media'] = (arr_df_b['x1'] + arr_df_b['x2'] + arr_df_b['x3'])/3\n",
    "arr_df_b"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 7) No DataFrame do exercício 6, crie uma nova coluna chamada \"log_med\", contendo o logaritmo natural da média calculada no exercício 6 <br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x1</th>\n",
       "      <th>x2</th>\n",
       "      <th>x3</th>\n",
       "      <th>media</th>\n",
       "      <th>ln_med</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>108.204372</td>\n",
       "      <td>100.521436</td>\n",
       "      <td>89.817762</td>\n",
       "      <td>99.514523</td>\n",
       "      <td>4.600304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>97.378961</td>\n",
       "      <td>80.091391</td>\n",
       "      <td>109.553379</td>\n",
       "      <td>95.674577</td>\n",
       "      <td>4.560953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84.821010</td>\n",
       "      <td>120.527806</td>\n",
       "      <td>96.853749</td>\n",
       "      <td>100.734188</td>\n",
       "      <td>4.612485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>105.216598</td>\n",
       "      <td>95.790807</td>\n",
       "      <td>95.082797</td>\n",
       "      <td>98.696734</td>\n",
       "      <td>4.592052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100.715298</td>\n",
       "      <td>94.076612</td>\n",
       "      <td>90.603889</td>\n",
       "      <td>95.131933</td>\n",
       "      <td>4.555265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>115.071206</td>\n",
       "      <td>93.766914</td>\n",
       "      <td>116.124897</td>\n",
       "      <td>108.321005</td>\n",
       "      <td>4.685099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>83.849035</td>\n",
       "      <td>107.887730</td>\n",
       "      <td>98.120949</td>\n",
       "      <td>96.619238</td>\n",
       "      <td>4.570778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>88.479988</td>\n",
       "      <td>89.597588</td>\n",
       "      <td>99.885475</td>\n",
       "      <td>92.654350</td>\n",
       "      <td>4.528876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>91.168774</td>\n",
       "      <td>80.777158</td>\n",
       "      <td>82.952188</td>\n",
       "      <td>84.966040</td>\n",
       "      <td>4.442252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>100.884500</td>\n",
       "      <td>98.125063</td>\n",
       "      <td>94.678752</td>\n",
       "      <td>97.896105</td>\n",
       "      <td>4.583907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>101.856691</td>\n",
       "      <td>85.000402</td>\n",
       "      <td>110.576909</td>\n",
       "      <td>99.144667</td>\n",
       "      <td>4.596580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>90.234030</td>\n",
       "      <td>93.544917</td>\n",
       "      <td>95.126427</td>\n",
       "      <td>92.968458</td>\n",
       "      <td>4.532260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>111.342199</td>\n",
       "      <td>102.163709</td>\n",
       "      <td>95.270229</td>\n",
       "      <td>102.925379</td>\n",
       "      <td>4.634004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>95.727915</td>\n",
       "      <td>102.706248</td>\n",
       "      <td>111.966588</td>\n",
       "      <td>103.466917</td>\n",
       "      <td>4.639252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>106.544699</td>\n",
       "      <td>104.838143</td>\n",
       "      <td>112.298319</td>\n",
       "      <td>107.893720</td>\n",
       "      <td>4.681147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>92.014170</td>\n",
       "      <td>112.504240</td>\n",
       "      <td>104.227038</td>\n",
       "      <td>102.915149</td>\n",
       "      <td>4.633905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>109.336090</td>\n",
       "      <td>95.266416</td>\n",
       "      <td>119.688485</td>\n",
       "      <td>108.096997</td>\n",
       "      <td>4.683029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>109.301463</td>\n",
       "      <td>96.538886</td>\n",
       "      <td>105.930328</td>\n",
       "      <td>103.923559</td>\n",
       "      <td>4.643656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>96.156765</td>\n",
       "      <td>94.846604</td>\n",
       "      <td>90.484875</td>\n",
       "      <td>93.829414</td>\n",
       "      <td>4.541478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>109.839603</td>\n",
       "      <td>92.254501</td>\n",
       "      <td>110.114301</td>\n",
       "      <td>104.069468</td>\n",
       "      <td>4.645059</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            x1          x2          x3       media    ln_med\n",
       "1   108.204372  100.521436   89.817762   99.514523  4.600304\n",
       "2    97.378961   80.091391  109.553379   95.674577  4.560953\n",
       "3    84.821010  120.527806   96.853749  100.734188  4.612485\n",
       "4   105.216598   95.790807   95.082797   98.696734  4.592052\n",
       "5   100.715298   94.076612   90.603889   95.131933  4.555265\n",
       "6   115.071206   93.766914  116.124897  108.321005  4.685099\n",
       "7    83.849035  107.887730   98.120949   96.619238  4.570778\n",
       "8    88.479988   89.597588   99.885475   92.654350  4.528876\n",
       "9    91.168774   80.777158   82.952188   84.966040  4.442252\n",
       "10  100.884500   98.125063   94.678752   97.896105  4.583907\n",
       "11  101.856691   85.000402  110.576909   99.144667  4.596580\n",
       "12   90.234030   93.544917   95.126427   92.968458  4.532260\n",
       "13  111.342199  102.163709   95.270229  102.925379  4.634004\n",
       "14   95.727915  102.706248  111.966588  103.466917  4.639252\n",
       "15  106.544699  104.838143  112.298319  107.893720  4.681147\n",
       "16   92.014170  112.504240  104.227038  102.915149  4.633905\n",
       "17  109.336090   95.266416  119.688485  108.096997  4.683029\n",
       "18  109.301463   96.538886  105.930328  103.923559  4.643656\n",
       "19   96.156765   94.846604   90.484875   93.829414  4.541478\n",
       "20  109.839603   92.254501  110.114301  104.069468  4.645059"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# seu código aqui\n",
    "arr_df_b['ln_med'] = np.log(arr_df_b['media'])\n",
    "arr_df_b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}


